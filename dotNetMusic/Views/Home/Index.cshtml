@{
    ViewBag.Title = "Home Page";
}
<script src="~/Scripts/jquery-3.2.1.js"></script>
<link href="~/Content/dotNetMusic.css" rel="stylesheet">
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
<script>
    var collectionPlaylistval;
    updateUI = function (id, title, artist) {
        if (typeof (id) != "undefined") {
            var url = "https://www.youtube.com/embed/" + id;
            var categoryHtml = '<div id="Collect-' + id + '"><hr/><div><iframe width="70%" height="400" src="' + url + '" frameborder="0" allowfullscreen></iframe>';
            categoryHtml = categoryHtml + '<span class="pull-right" id="collectbtn-' + id + '" style="position:absolute; ">';
            categoryHtml = categoryHtml + '<span class="btn btn-primary btn-success hugebtn" video-id="' + id + '">Collect</span>';
            var titledisplay = title;
            var artistdisplay = artist;
            if (typeof (titledisplay) != 'undefined' && titledisplay != null && titledisplay.length > 20) {
                titledisplay = titledisplay.substring(0, 40) + "...";
            }
            if (typeof (artistdisplay) != 'undefined' &&  artistdisplay != null && artistdisplay.length > 20) {
                artistdisplay = artistdisplay.substring(0, 40) + "...";
            }
            categoryHtml = categoryHtml + '<br /> <span title="' + title + '" class="btn btn-primary infobtn hugebtn title">' + titledisplay + '</span>';
            categoryHtml = categoryHtml + '<br /> <span title="' + artist + '"class="btn btn-primary infobtn hugebtn artist"> ' + artistdisplay + '</span></span >';
            categoryHtml = categoryHtml + '</div ></div > ';
            $('#Searchresults').append(categoryHtml);
            $("#collectbtn-" + id).click(function () {
                $('#Collect-' + id).addClass('animated zoomOutDown');
                setTimeout(function hideDiv() {
                    $('#Collect-' + id).delay(10000).remove();
                }, 900);
                var url = "https://www.youtube.com/watch?v=" + id
                var requestData = {
                    Title: title,
                    Artist: artist,
                    EmbedURL: url,
                    PlaylistId: collectionPlaylistval
                };
                $.ajax({
                    url: '/Tracks/Create/',
                    dataType: 'json',
                    contentType: 'application/json',
                    method: 'POST',
                    data: JSON.stringify(requestData)
                }).done(function (responseHtml, status, xhr) {
                    refreshIndex(true);
                }).fail(function (xhr, status, error) {
                    alert("Collect failed, Try again.");
                });
            });
        }
    };

    function lineItem(id, Title, Artist, EmbedURL, Playlist, Description, Image, rating) {
        var videoId;
        if (typeof (EmbedURL) != "undefined" && EmbedURL != null && EmbedURL.trim() != "") {
            videoId = EmbedURL.split("v=")[1];
            var ampersandPosition = videoId.indexOf('&');
            if (ampersandPosition != -1) {
                videoId = videoId.substring(0, ampersandPosition);
            }
        }

        var li = '<table cellspacing="0" cellpadding="0"><tr><hr/></tr><tr><td style="width: 70%;"><iframe style="width: 100%;" height="400" src="https://www.youtube.com/embed/' + videoId + '" frameborder="0" allowfullscreen></iframe></td>';
        li = li + '<td align="left">';
        var titledisplay = Title;
        var artistdisplay = Artist;
        var Descdisplay = Description;
        if (typeof (titledisplay) != 'undefined' && titledisplay != null && titledisplay.length > 20) {
            titledisplay = titledisplay.substring(0, 40) + "...";
        }
        if (typeof (artistdisplay) != 'undefined' && artistdisplay !=null && artistdisplay.length > 20) {
            artistdisplay = artistdisplay.substring(0, 40) + "...";
        }
        if (typeof (Descdisplay) != 'undefined' && Descdisplay !=null && Descdisplay.length > 25) {
            Descdisplay = Descdisplay.substring(0, 25) + "...";
        }
        li = li + '<span style="float: right;" title="' + Title + '"class="btn btn-primary infobtn" >Title: ' + titledisplay + '</span>';

        if (typeof (Artist) != 'undefined' && Artist != null && Artist.trim() != "")
            li = li + '<br/><span style="float: right;" title="' + Artist + '"class="btn btn-primary btn-success infobtn" > Artist: ' + artistdisplay + '</span>';
        li = li + '<br/><span style="float: right;"id="DelPropbtn" class="btn btn-primary btn-xs btn-danger" delprop-id="' + id + '">Delete</span>';
        if (typeof (Description) != 'undefined' && Description != null && Description.trim() != "")
            li = li + '<br/><span  style="float: right;" title="' + Description + '"style="float: right;">' + Descdisplay + '</span>';

        li = li + '<br/><span style="float: right;"><span rating="1" track-id="' + id + '" class="fa fa-star"></span><span track-id="' + id + '" rating="2" class="fa fa-star"></span><span track-id="' + id + '" rating="3" class="fa fa-star"></span><span track-id="' + id + '" rating="4" class="fa fa-star"></span><span track-id="' + id + '" rating="5" class="fa fa-star"></span></span>';
        li = li + '<br/><p style="float: right;"class="text-muted cursive">' + Playlist + ' | <a id="EditPropertybtn" editprop-id="' + id + '">Edit</a></p>';
        li = li + '<br/><span ><img style="width: 35%; float: right;" src="data:image/png;base64,' + Image + '"/></span>';
        li = li + '';
        li = li + "</td></tr></table>";
        return li;
    }

    $(document).on('click', '.fa-star', function () {
        var rating = $(this).attr('rating');
        var track = $(this).attr('track-id');

        var requestData = {
            id: track,
            rating: rating
        };
        $.ajax({
            url: '/Tracks/ratetrack/',
            dataType: 'json',
            contentType: 'application/json',
            method: 'POST',
            data: JSON.stringify(requestData)
        }).done(function (responseHtml, status, xhr) {
            refreshIndex(false);
        }).fail(function (xhr, status, error) {
        });

    });

    //Refresh Track List
    function refreshIndex(skipmodal) {
        $.ajax({
            url: '/Home/LoadProp/',
            dataType: 'json',
            contentType: 'application/json',
            method: 'GET',
            data: {
                json: JSON.stringify({})
            },
            beforeSend: function () {
                if (!skipmodal)
                    $('#myModal').modal('show')
            },
            complete: function () {
                $('#myModal').modal('hide');
                $('#AddTrackDetails').focus();
            }
        }).done(function (responseData, status, xhr) {
            var responseData = responseData;
            $("#MusicContent").empty();
            $.each(responseData, function (index, item) {
                $("#MusicContent").append(lineItem(item.id, item.Title, item.Artist, item.EmbedURL, item.Playlist.name, item.Description, item.Image, item.rating));
                $('.fa-star').each(function () {
                    if ($(this).attr('track-id') == item.id) {
                        if ($(this).attr("rating") <= item.rating) {
                            $(this).addClass('checked');
                        }
                    }
                });
            });
            collectionPlaylistval = "";
            loadPlaylists();
        }).fail(function (xhr, status, error) {
            alert("Please refresh the page");
        });
    }
    function loadPlaylists() {
        $.ajax({
            url: '/Home/loadPlaylists/',
            dataType: 'json',
            contentType: 'application/json',
            method: 'GET',
            data: {
                json: JSON.stringify({})
            }
        }).done(function (responseData, status, xhr) {
            $('#palylistdropdown').empty();
            $.each(responseData, function (index, item) {
                $('<option/>').val(item.Id).html(item.name).appendTo('#palylistdropdown');
                if (item.name.indexOf('Collection') !== -1) {
                    collectionPlaylistval = item.Id;
                }
            });
            if (typeof (collectionPlaylistval) == "undefined" || collectionPlaylistval == "") {
                collectionPlaylistval = $("#palylistdropdown").val();
            }
        }).fail(function (xhr, status, error) {
        });
    }

    function isInValidUrl(urlstr) {
        var URL = urlstr;
        if (/^(http:\/\/www\.|https:\/\/www\.|http:\/\/|https:\/\/)?[a-z0-9]+([\-\.]{1}[a-z0-9]+)*\.[a-z]{2,5}(:[0-9]{1,5})?(\/.*)?$/i.test(URL)) {
            return false;
        } else {
            return true;
        }
    }

    $(document).ready(
        function () {

            if ('webkitSpeechRecognition' in window) {
                var recognition = new webkitSpeechRecognition();
                recognition.continuous = false;
                recognition.interimResults = false;
                recognition.onstart = function () { $('#modalLoadText').hide(); $('#modalListenText').show(); $('#myModal').modal('show'); console.log("Start"); }
                recognition.onresult = function (event) { console.log("Finish"); }
                recognition.onerror = function (event) { console.log("Error"); }
                recognition.onend = function () { $('#modalLoadText').show(); $('#modalListenText').hide(); $('#myModal').modal('hide'); console.log("End"); }
            }

            $("#speechimg").click(function () {
                final_transcript = '';
                recognition.lang = "en-US";
                recognition.start();
                recognition.onresult = function (event) {
                    var interim_transcript = '';
                    for (var i = event.resultIndex; i < event.results.length; ++i) {
                        if (event.results[i].isFinal) {
                            final_transcript += event.results[i][0].transcript;
                        } else {
                            interim_transcript += event.results[i][0].transcript;
                        }
                    }
                    $("#Seachbox").val(final_transcript);
                    $("#Seachbtn").click();
                }
            });
            $("#Seachbtn").click(function () {
                $.ajax({
                    url: 'https://www.googleapis.com/youtube/v3/search',
                    dataType: 'json',
                    contentType: 'application/json',
                    method: 'GET',
                    data: {
                        part: "snippet",
                        q: $("#Seachbox").val(),
                        key: "AIzaSyCS2yNvFPNc5Z1TffSLu4VtDh-NJZYyBeg"
                    },
                    beforeSend: function () {
                        $('#myModal').modal('show');
                    },
                    complete: function () {
                        $('#myModal').modal('hide');
                    }
                }).done(function (responseData, status, xhr) {
                    var response = responseData.items;
                    $('#Searchresults').empty();
                    $.each(response, function (index, item) {
                        updateUI(item.id.videoId, item.snippet.title, item.snippet.channelTitle);
                    });
                    $('#myModal').modal('hide');
                }).fail(function (xhr, status, error) {
                    alert("API failed due to slow network, Refresh");
                });
            });

            //Add new Track
            $("#AddTrackbtn").click(function () {
                $("#AddTrackDetails").show();
                $('#AddTrackDetails').find('input').val('');
                $('#palylistdropdown').prop('selectedIndex', 0);
                $('#Title').focus();
                $("#Createnewtrack").show();
                $("#Updatetrack").hide();
            });
            $("#Createnewtrack").click(function () {
                var titleval = $("#Title").val();
                var URLval = $("#Url").val();
                if (typeof (titleval) == 'undefined' || titleval.trim() == "" || titleval == " ") {
                    $("#Title-error").show();
                    $("#URL - error").hide();
                } else if (typeof (URLval) == 'undefined' || URLval.trim() == "" || URLval == " " || isInValidUrl(URLval)) {
                    $("#Title-error").hide();
                    $("#URL-error").show();
                } else {
                    $("#Title-error").hide();
                    $("#URL-error").hide();
                    var requestData = {
                        Title: $("#Title").val(),
                        Artist: $("#Artist").val(),
                        EmbedURL: $("#Url").val(),
                        Description: $("#Description").val(),
                        PlaylistId: $("#palylistdropdown").val()
                    };
                    $.ajax({
                        url: '/Tracks/Create/',
                        dataType: 'json',
                        contentType: 'application/json',
                        method: 'POST',
                        data: JSON.stringify(requestData)
                    }).done(function (responseHtml, status, xhr) {
                        $("#AddTrackDetails").hide();
                        refreshIndex(false);
                        $('#AddTrackDetails').find('input').val('');
                        $('#palylistdropdown').prop('selectedIndex', 0);
                    }).fail(function (xhr, status, error) {
                        alert("Create new Track failed, Try again.");
                    });
                }
            });

            //create playlist
            $("#createPlaylist").click(function () {
                var nameval = $("#playname").val();
                var descval = $("#playDesc").val();
                if (typeof (nameval) == 'undefined' || nameval.trim() == "" || nameval == " ") {
                    $("#playlist-error").show();
                } else {
                    $("#playlist-error").hide();
                    var requestData = {
                        name: nameval,
                        description: descval
                    };

                    $.ajax({
                        url: '/Playlists/Create/',
                        dataType: 'json',
                        contentType: 'application/json',
                        method: 'POST',
                        data: JSON.stringify(requestData)
                    }).done(function (responseHtml, status, xhr) {
                        $('#playlistModal').modal('hide');
                        $("#playname").val('');
                        $("#playDesc").val('');
                        $("#playlist-error").hide();
                        refreshIndex(true);
                    }).fail(function (xhr, status, error) {
                        alert("Create new Playlist failed, Try again.");
                    });
                }
            });


            //Edit
            $(document).on('click', '#EditPropertybtn', function () {
                var requestData = {
                    id: $(this).attr("editprop-id")
                };
                $.ajax({
                    url: "/Tracks/CustomEdit/",
                    dataType: 'json',
                    contentType: 'application/json',
                    method: 'GET',
                    data: requestData
                }).done(function (responseHtml, status, xhr) {
                    var item = JSON.parse(JSON.stringify(responseHtml));
                    $("#EditPropId").val(requestData.id);
                    $("#Title").val(item.Title);
                    $("#Artist").val(item.Artist);
                    $("#Url").val(item.EmbedURL);
                    $("#Description").val(item.Description)
                    $("#palylistdropdown").val(item.PlaylistId);
                    $("#AddTrackDetails").show();
                    $("#Createnewtrack").hide();
                    $("#Updatetrack").show();
                    $("#Title").focus();
                }).fail(function (xhr, status, error) {
                    alert("Update Track failed, Try again.");
                });
            });
            //Update property
            $(document).on('click', '#Updatetrack', function () {
                var requestData = {
                    id: $('#EditPropId').val(),
                    Title: $("#Title").val(),
                    Artist: $("#Artist").val(),
                    EmbedURL: $("#Url").val(),
                    Description: $("#Description").val(),
                    PlaylistId: $("#palylistdropdown").val()
                };

                $.ajax({
                    url: '/Tracks/CustomEditConfirm/',
                    dataType: 'html',
                    method: 'POST',
                    data: requestData
                }).done(function (responseHtml, status, xhr) {
                    $("#AddTrackDetails").hide();
                    refreshIndex(false);
                    $('#AddTrackDetails').find('input').val('');
                    $('#palylistdropdown').prop('selectedIndex', 0);
                }).fail(function (xhr, status, error) {
                    alert("Edit Track failed, Try again.");
                });
            });
            //Delete
            $(document).on('click', '#DelPropbtn', function () {

                var itemId = $(this).attr("delprop-id");
                var requestData = {
                    id: itemId
                };
                var result = confirm('Are you sure you want to delete ');/* + $(this).parent('span').parent('span').find('strong').html() + '?')*/
                if (result == true) {
                    $.ajax({
                        url: '/Tracks/DeleteConfirmed/',
                        dataType: 'html',
                        method: 'POST',
                        data: requestData
                    }).done(function (responseHtml, status, xhr) {
                        $('#AddTrackDetails').find('input').val('');
                        $('#palylistdropdown').prop('selectedIndex', 0);
                        refreshIndex(false);
                        $("#Createnewtrack").show();
                        $("#Updatetrack").hide();
                    }).fail(function (xhr, status, error) {
                        alert("Delete property failed, Try again.");
                    });
                }
            });

            refreshIndex(false);
            $("#Updatetrack").hide();


        });
</script>
<div class="modal fade" id="myModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
    <div class="vertical-alignment-helper">
        <div class="modal-dialog vertical-align-center" role="document">
            <div class="modal-content text-center">
                <div id="modalLoadText" style="color:#000000" class="modal-body text-center">
                    Loading...
                </div>
                <div id="modalListenText" style="color:#000000" class="modal-body text-center" hidden="hidden">
                    Listening...
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Modal -->
<div class="modal fade" id="playlistModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content text-center" ">
            <div class="modal-header">
                <h4 style="color: black;" class="modal-title" id="exampleModalLabel">Playlist</h4>
            </div>
            <div class="modal-body form-horizontal">
                <div class="form-group">
                    <label style="color:black" class="control-label col-md-4">Playlist name</label>
                    <div class="col-md-8">
                        <input class="form-control text-box single-line" id="playname" type="text">
                    </div>
                    <span id="playlist-error" class="text-danger" hidden="hidden">
                        <span>Playlist name is required.</span>
                    </span>
                </div>
                <div class="form-group">
                    <label style="color:black" class="control-label col-md-4">Description</label>
                    <div class="col-md-8">
                        <input class="form-control text-box single-line" id="playDesc" type="text">
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                <button type="button" class="btn btn-primary" id="createPlaylist">Save changes</button>
            </div>
        </div>
    </div>
</div>


<div class="jumbotron overlay" style="width: 70%">
    <br />
    <br />
    <h2 style="text-align: center;">dotNetMusic is the best place to make and discover playlists</h2>
    <p class="homepara">Get unlimited, ad-free listening with 30 days on the house and $4.99/month after.</p>
    <p class="homepara">
        <a href="https://www.youtube.com/channel/UC-9-kyTW8ZkZNDHQJ6FgpwQ/featured" target="_blank" class="btn btn-primary">Explore Music</a> |
        <a onclick="$('#playlist-error').hide();$('#playname').val('');$('#playDesc').val(''); $('#playlistModal').modal('show');$('#playname').focus();" class="btn btn-primary">Create Playlist</a>
    </p>
    <p class="homepara">
        <input type="text" id="Seachbox" />
        <input type="button" id="Seachbtn" class="btn btn-success" value="Search" />
        <img id="speechimg" style="height: 2em; margin-left: 5px;" src="~/Content/Google_mic.svg" />
    </p>
    <hr />
    <div class="text-center">
        <a id="AddTrackbtn" class="btn btn-primary">Add to Collections</a>
        <br />
        <div id="AddTrackDetails" hidden="hidden">
            <br />
            <div class="form-horizontal">
                <div class="form-group">
                    <input type="hidden" value="" id="EditPropId" />
                    <label class="control-label col-md-4">Title</label>
                    <div class="col-md-8">
                        <input class="form-control text-box single-line" id="Title" name="Title" type="text" value="">
                    </div>
                    <span id="Title-error" class="text-danger field-validation-error" hidden="hidden">
                        <span class="col-md-4">The Title field is required.</span>
                    </span>
                </div>
                <div class="form-group">
                    <label class="control-label col-md-4">Artist</label>
                    <div class="col-md-8">
                        <input class="form-control text-box single-line" id="Artist" name="Artist" type="text" value="">
                    </div>
                </div>
                <div class="form-group">
                    <label class="control-label col-md-4">Embed URL</label>
                    <div class="col-md-8">
                        <input class="form-control text-box single-line" id="Url" name="Url" type="text" value="">
                    </div>
                    <span id="URL-error" class="text-danger field-validation-error" hidden="hidden">
                        <span class="col-md-4">Enter a valid Youtube Url.</span>
                    </span>
                </div>
                <div class="form-group">
                    <label class="control-label col-md-4">Description</label>
                    <div class="col-md-8">
                        <input class="form-control text-box single-line" id="Description" name="Description" type="text" value="">
                    </div>
                </div>
                <div class="form-group">
                    <label class="control-label col-md-4" for="PlaylistId">Playlist</label>
                    <div class="col-md-8">
                        <select id="palylistdropdown" class="form-control valid" id="PlaylistId" name="Playlist" aria-invalid="false"></select>
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-8">
                        <a id="Createnewtrack" style="width: 25%;" class="btn btn-default">Create</a>
                        <a id="Updatetrack" style="width: 25%;" class="btn btn-default">Update</a>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div id="Searchresults"></div>
    <hr />
    <h2>My Collection</h2>
    <div id="MusicContent" />
</div>
